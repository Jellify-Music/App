diff --git a/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSScreenShadowNode.cpp b/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSScreenShadowNode.cpp
index 94822c5..1499e11 100644
--- a/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSScreenShadowNode.cpp
+++ b/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSScreenShadowNode.cpp
@@ -14,9 +14,9 @@ Point RNSScreenShadowNode::getContentOriginOffset(
   return stateData.contentOffset;
 }
 
-std::optional<std::reference_wrapper<const ShadowNode::Shared>>
+std::optional<std::reference_wrapper<const std::shared_ptr<const ShadowNode>>>
 findHeaderConfigChild(const YogaLayoutableShadowNode &screenShadowNode) {
-  for (const ShadowNode::Shared &child : screenShadowNode.getChildren()) {
+  for (const std::shared_ptr<const ShadowNode> &child : screenShadowNode.getChildren()) {
     if (std::strcmp(child->getComponentName(), "RNSScreenStackHeaderConfig") ==
         0) {
       return {std::cref(child)};
@@ -81,7 +81,7 @@ std::optional<float> findHeaderHeight(
 }
 #endif // ANDROID
 
-void RNSScreenShadowNode::appendChild(const ShadowNode::Shared &child) {
+void RNSScreenShadowNode::appendChild(const std::shared_ptr<const ShadowNode> &child) {
   YogaLayoutableShadowNode::appendChild(child);
 #ifdef ANDROID
   const auto &stateData = getStateData();
diff --git a/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSScreenShadowNode.h b/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSScreenShadowNode.h
index 6b4b72e..3379f89 100644
--- a/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSScreenShadowNode.h
+++ b/node_modules/react-native-screens/common/cpp/react/renderer/components/rnscreens/RNSScreenShadowNode.h
@@ -28,7 +28,7 @@ class JSI_EXPORT RNSScreenShadowNode final : public ConcreteViewShadowNode<
 
   Point getContentOriginOffset(bool includeTransform) const override;
 
-  void appendChild(const ShadowNode::Shared &child) override;
+  void appendChild(const std::shared_ptr<const ShadowNode> &child) override;
 
   void layout(LayoutContext layoutContext) override;
 
